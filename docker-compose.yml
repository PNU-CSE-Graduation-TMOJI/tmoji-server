services:
  db:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1",
        ]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s

  web:
    build: .
    container_name: fastapi_app
    restart: always
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/code
      - ${HOME}/.aws:/root/.aws:ro
      - type: volume
        source: dummy_venv
        target: /code/.venv
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db

  migration:
    build: .
    container_name: alembic_migration
    command: poetry run alembic upgrade head
    restart: "no"
    volumes:
      - .:/code
      - type: volume
        source: dummy_venv
        target: /code/.venv
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  worker:
    build: .
    container_name: celery_worker
    restart: always
    command: celery -A app.celery_app.celery worker -l info --concurrency=2
    env_file:
      - .env
    depends_on:
      - redis
      - db
    volumes:
      - .:/code
      - type: volume
        source: dummy_venv
        target: /code/.venv

volumes:
  pgdata:
  dummy_venv:
